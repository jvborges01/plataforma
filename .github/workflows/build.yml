name: Build Electron App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build app (Electron Forge)
        run: npm run make

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MapOn-${{ matrix.os }}
          path: |
            out/
            dist/
            release/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds 

      - name: List downloaded files
        run: ls -R builds

      - name: Create a unique tag for this build
        id: tag
        run: echo "tag=v${GITHUB_RUN_NUMBER}-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Delete existing release if it exists
        continue-on-error: true
        run: |
          gh release delete ${{ steps.tag.outputs.tag }} -y || echo "No previous release"
          git tag -d ${{ steps.tag.outputs.tag }} || true
          git push origin :refs/tags/${{ steps.tag.outputs.tag }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "MapOn ${{ steps.tag.outputs.tag }}"
          draft: false
          prerelease: false
          files: builds/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
